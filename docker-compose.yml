services:
  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"

  api-gateway:
    build: ./api-gateway
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server

  resource-service-db:
    env_file:
      - .env
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${RESOURCES_DB}
    volumes:
      - ./init-scripts/resource-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"

  song-service-db:
    env_file:
      - .env
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${SONGS_DB}
    volumes:
      - ./init-scripts/song-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"

  localstack:
    container_name: localstack
    image: localstack/localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - DEBUG=1
    volumes:
      - "./localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./localstack/init-scripts:/etc/localstack/init/ready.d"

  resource-service:
    build: ./resource-service
    env_file:
      - .env
    depends_on:
      - resource-service-db
      - eureka-server
      - localstack

  resource-processor:
    build: ./resource-processor
    env_file:
      - .env
    depends_on:
      - resource-service

  song-service:
    build: ./song-service
    env_file:
      - .env
    deploy:
      replicas: 2
    depends_on:
      - resource-processor
      - song-service-db
      - resource-service
      - eureka-server
