spring:
  application:
    name: api-gateway

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${AUTH_SERVER_URL:http://localhost:9000}/oauth2/jwks

  cloud:
    gateway:
      routes:
        - id: resource-service
          uri: lb://RESOURCE-SERVICE
          predicates:
            - Path=/resources/**
          filters:
            - name: CircuitBreaker
              args:
                name: resourceCB
                fallbackUri: forward:/fallback/resource
        - id: song-service
          uri: lb://SONG-SERVICE
          predicates:
            - Path=/songs/**
          filters:
            - name: CircuitBreaker
              args:
                name: songCB
                fallbackUri: forward:/fallback/song
        - id: storage-service
          uri: lb://STORAGE-SERVICE
          predicates:
            - Path=/storages/**
          filters:
            - name: CircuitBreaker
              args:
                name: storageCB
                fallbackUri: forward:/fallback/storage

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    tags:
      application: api-gateway
  tracing:
    sampling:
      probability: 1.0

server:
  port: ${GATEWAY_PORT:8080}