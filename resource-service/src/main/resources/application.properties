spring.application.name=resource-service

spring.datasource.url=${RESOURCE_SERVICE_DB_URL:jdbc:postgresql://localhost:5432/postgres}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=none

server.port=8082

eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka/}

storage.service.url=${STORAGE_CLIENT_SERVICE_URL:http://storage-service/storages}

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
kafka.topic.resource-uploaded=${KAFKA_TOPIC_RESOURCE_UPLOADED:resource-uploaded}
kafka.topic.resource-deleted=${KAFKA_TOPIC_RESOURCE_DELETED:resource-deleted}
kafka.topic.resource-processed=${KAFKA_TOPIC_RESOURCE_PROCESSED:resource-processed}
kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:resource-processor-group}

# AWS S3 & LocalStack configuration
aws.s3.endpoint-url=${AWS_S3_ENDPOINT_URL:http://localstack:4566}
aws.region=${AWS_REGION:us-east-1}
aws.access-key=${AWS_ACCESS_KEY:test}
aws.secret-key=${AWS_SECRET_KEY:test}

# Outbox scheduler
outbox.scheduler.initial-delay=10000
outbox.scheduler.fixed-rate=5000

# Storage defaults
storage.defaults.STAGING.bucket=default-staging-bucket
storage.defaults.STAGING.path=staging

storage.defaults.PERMANENT.bucket=default-permanent-bucket
storage.defaults.PERMANENT.path=permanent

# Retry configuration
resilience4j.retry.instances.storageServiceRetry.max-attempts=3
resilience4j.retry.instances.storageServiceRetry.wait-duration=500ms

# Circuit Breaker configuration
resilience4j.circuitbreaker.instances.storageServiceCircuitBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.storageServiceCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.storageServiceCircuitBreaker.wait-duration-in-open-state=5s

management.endpoints.web.exposure.include=health, info, prometheus
management.prometheus.metrics.export.enabled=true
management.metrics.tags.application=resource-service